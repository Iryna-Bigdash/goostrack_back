{
    "openapi": "3.0.1",
    "info": {
        "version": "2.0.3",
        "title": "Goose Calendar - OpenAPI 3.0",
        "description": "This is a Goose Calendar Server based on the OpenAPI 3.0 specification.<p>The project is a web application for efficient time planning.It includes the ability to register users, authenticate and authorize them. Additionally, users can create and track their tasks according to date and time, view own statistics and categorize task by priority and progress status.The application features a user-friendly and intuitive interface that facilitates easy and quick execution of all necessary actions. Furthermore, the project ensures user security through password encryption and token-based identification.</p><p><strong>Technology Stack Used in the Project:</strong></p><p>Node.js - JavaScript runtime environment on the server.</p><p>Express.js - framework for web application development on Node.js.</p><p>MongoDB - NoSQL database</p>",
        "contact": {
            "email": "imbigdash@gmail.com"
        }
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "servers": [
        {
            "url": "https://goostrack-backend.onrender.com"
        },
        {
            "url": "http://localhost:8000"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Authorization endpoints"
        },
        {
            "name": "Users",
            "description": "Users endpoints"
        },
        {
            "name": "Tasks",
            "description": "Tasks endpoints"
        },
        {
            "name": "Reviews",
            "description": "Reviews endpoints"
        }
    ],
    "paths": {
        "auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "AuthControllers_register",
                "summary": "Auth new user",
                "parameters": [],
                "requestBody": {
                    "description": "<p><strong>username</strong> - string, Username must be no more than 16 symbols </p><p><strong>email</strong> - string</p><p><strong>password</strong> - string, Password must contain at least 1 Upper case letter, 1 lower case letter and be longer than 8 symbols</p>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegister"
                            }
                        }
                    }
                },
                "security": [],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/registerSchemaResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing required FieldName field"
                    },
                    "409": {
                        "description": "Email in use"
                    }
                }
            }
        },
        "auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "AuthControllers_login",
                "summary": "Login user",
                "parameters": [],
                "requestBody": {
                    "description": "<p><strong>email</strong> - string, user email</p><p><strong>password</strong> - string, user email</p>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    }
                },
                "security": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/loginSchemaResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing required FieldName field"
                    },
                    "401": {
                        "description": "Please verify your email"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User logout",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Contend",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/logoutSchemaResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/auth/verify": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User verification",
                "parameters": [],
                "requestBody": {
                    "description": "<p><strong>email</strong> - string, user email</p>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/verificationSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/verificationSchemaResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/verify/:verificationToken": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Confirmation of verification",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verification successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/verificationTokenSchemaResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/users/current": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get current user info",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (provide valid token)",
                        "content": {}
                    }
                }
            }
        },
        "/users/edit": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "User update info",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "UserUpdate's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUserResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    }
                }
            }
        },
        "/edit/avatar": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "User update avatar",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "UserUpdate's avatar object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAvatarRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAvatarRequest"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get all tasks",
                "parameters": [
                    {
                        "in": "query",
                        "name": "day",
                        "required": false,
                        "type": "string",
                        "description": "The date on which to return the tasks. Format: YYYY-MM-DD"
                    },
                    {
                        "in": "query",
                        "name": "month",
                        "required": false,
                        "type": "string",
                        "description": "Any date of the month for which tasks must be returned. Format: YYYY-MM-DD"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTasksResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to fetch Tasks",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create task",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "Tasks's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateTaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to save in DataBase",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    }
                }
            }
        },
        "/tasks/{id}": {
            "patch": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Change tasks",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Task id"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "Tasks's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDeletePatchTaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to find Task",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Task id"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetDeletePatchTaskResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to find Task",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    }
                }
            }
        },
        "/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get all users' reviews",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "required": false,
                        "type": "integer",
                        "description": "Number page"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "integer",
                        "description": "Count reviews in response"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAllReviewsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/reviews/own": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get user review",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAllUsersReviewsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create review",
                "parameters": {},
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "<p><strong>rating</strong> - string, app score (from 1 to 5), </p><p><strong>comment</strong> - string, user comment 300 symbols maximum</p>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review added successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "rating is required"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review from you already exists"
                                        }
                                    }
                                }
                            }
                        }
                    } 
                }
            },
            "patch": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Review task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Review id"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateReviewResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Review task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "description": "Review id"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteReviewResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to find Review",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "securitySchemes": {
                "Bearer": {
                    "type": "http",
                    "scheme": "bearer",
                    "bearerFormat": "JWT"
                }
            },
            "UserRegister": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Username",
                        "example": "Iryna Dev"
                    },
                    "email": {
                        "type": "string",
                        "example": "iryna@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "Iryna1234567$"
                    }
                },
                "required": [
                    "username",
                    "email",
                    "password"
                ]
            },
            "registerSchemaResponse": {
                "type": "object",
                "example": "Please verify your email"
            },
            "UserLogin": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "iryna@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "Iryna1234567$"
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "loginSchemaResponse": {
                "type": "object",
                "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZjI1Y2ZhMTI3YWRkZTg2YWEzMjI2MCIsImlhdCI6MTY5MzY1ODEyOCwiZXhwIjoxNjk0MDkwMTI4fQ.Qyu42NimnpCLwtWg5keZ5QvC-SSOytUqftf5VxxEQMz",
                    "user": {
                        "username": "Iryna Dev",
                        "email": "iryna.com",
                        "avatar": "https://s.gravatar.com/avatar/5ffe2fd09d4f8a6dcb16c462e412df13?d=retro&s=100"
                    }
                }
            },
            "logoutSchemaResponse": {
                "type": "object",
                "example": {
                    "message": "Logout success"
                }
            },
            "verificationSchema": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "user email",
                        "example": "iryna@gmail.com"
                    }
                },
                "required": "email"
            },
            "verificationTokenSchemaResponse": {
                "type": "object",
                "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZjI1Y2ZhMTI3YWRkZTg2YWEzMjI2MCIsImlhdCI6MTY5MzY1ODEyOCwiZXhwIjoxNjk0MDkwMTI4fQ.Qyu42NimnpCLwtWg5keZ5QvC-SSOytUqftf5VxxEQMz",
                    "user": {
                        "username": "Iryna Dev",
                        "email": "iryna.com",
                        "avatar": "https://s.gravatar.com/avatar/5ffe2fd09d4f8a6dcb16c462e412df13?d=retro&s=100"
                    }
                }
            },
            "verificationSchemaResponse": {
                "type": "object",
                "example": {
                    "message": "Verification email sent"
                }
            },
            "GetAllReviewsResponse": {
                "type": "object",
                "example": {
                    "totalReviews": "2",
                    "totalPages": 1,
                    "currentPage": 1,
                    "limit": 10,
                    "reviews": [
                        {
                            "_id": "64f26065127adde86aa32278",
                            "rating": 5,
                            "comment": "GooseTrack is incredibly helpful, the sidebar with account management, calendar, and filter options make navigation seamless...",
                            "owner": {
                                "name": "Iryva Dev",
                                "avatarURL": "http://res.cloudinary.com/dfsbblojt/image/upload/v1693657749/users/...png"
                            },
                            "createdAt": "2023-09-01T22:06:29.420Z",
                            "updatedAt": "2023-09-01T22:06:29.420Z"
                        }
                    ]
                }
            },
            "GetAllUsersReviewsResponse": {
                "type": "object",
                "example": {
                    "reviews": [
                        {
                            "_id": "64f25d43127adde86aa32269",
                            "rating": 4,
                            "comment": "GooseTrack is impressive, the calendar view and filter options make it easy to stay organized and focused. Highly recommended.",
                            "owner": {
                                "username": "Iryna Dev",
                                "avatarURL": "http://res.cloudinary.com/dfsbblojt/image/upload/v1693658162/users...png"
                            },
                            "createdAt": "2023-09-01T21:53:07.249Z",
                            "updatedAt": "2023-09-01T21:53:07.249Z"
                        }
                    ]
                }
            },
            "ReviewCreateSchema": {
                "type": "object",
                "properties": {
                    "rating": {
                        "type": "Number",
                        "example": "5"
                    },
                    "comment": {
                        "type": "string",
                        "example": "GooseTrack is incredibly helpful and cool app 😻"
                    }
                },
                "required": [
                    "rating",
                    "comment"
                ]
            }
        }
    }
}